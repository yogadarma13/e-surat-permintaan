<resources xmlns:tools="http://schemas.android.com/tools">

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.MaterialComponents.Light.NoActionBar">

        <!-- Customize your theme here. -->
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowActionBar">false</item>
        <item name="android:windowContentTransitions" tools:ignore="NewApi">true</item>

        <item name="android:textColor">@color/colorTextPrimary</item>
        <item name="android:windowBackground">@color/colorBackground</item>

        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>

        <!-- <item name="android:windowBackground">@color/unselected_background_color</item> -->
        <item name="android:popupMenuStyle">@style/Widget.MaterialComponents.PopupMenu</item>
        <item name="android:itemTextAppearance">@style/itemTextStyle.AppTheme</item>
        <item name="android:contextPopupMenuStyle" tools:targetApi="n">
            @style/Widget.MaterialComponents.PopupMenu.ContextMenu
        </item>
        <item name="actionOverflowMenuStyle">@style/Widget.MaterialComponents.PopupMenu.Overflow
        </item>

        <item name="materialThemeOverlay">@style/MyFabOverlay</item>
    </style>

    <style name="MyFabOverlay">
        <!-- Customize colorSecondary to change icon/text of FAB (maps to tint and rippleColor) -->
        <item name="colorOnSecondary">@android:color/white</item>
        <!-- Set colorSecondary to change background of FAB (backgroundTint) -->
        <item name="colorSecondary">@color/colorAccent</item>
    </style>

    <!-- https://medium.com/@lcdsmao/material-design-custom-alert-dialog-5a9cab3ade11-->
    <style name="AlertDialogTheme" parent="ThemeOverlay.MaterialComponents.MaterialAlertDialog">
        <item name="materialAlertDialogTitleTextStyle">@style/TitleTextStyle</item>
        <item name="materialAlertDialogBodyTextStyle">@style/BodyTextStyle</item>
    </style>
    <style name="TitleTextStyle" parent="MaterialAlertDialog.MaterialComponents.Title.Text">
        <item name="android:textStyle">bold</item>
        <item name="android:textSize">20sp</item>
    </style>
    <style name="BodyTextStyle" parent="MaterialAlertDialog.MaterialComponents.Body.Text">
        <item name="android:textSize">20sp</item>
    </style>


    <style name="PopupMenu" parent="@android:style/Widget.PopupMenu">
        <item name="android:popupBackground">@color/shadow_background_color</item>
    </style>

    <style name="itemTextStyle.AppTheme" parent="@android:style/TextAppearance.Widget.IconMenu.Item">
        <item name="android:textColor">@drawable/color_item_popup</item>
        <item name="android:textSize">11sp</item>
    </style>

    <style name="DefaultButton" parent="Base.Widget.AppCompat.Button.Borderless">
        <item name="android:textSize">18sp</item>
        <item name="android:padding">15dp</item>
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:backgroundTint" tools:targetApi="lollipop">@android:color/white</item>
        <item name="android:background">@android:color/white</item>
        <item name="android:textColor">@color/colorPrimary</item>
        <item name="android:gravity">center_horizontal|center_vertical</item>
    </style>

    <!-- Style for material design 'Spinner'-->
    <style name="AppTheme.ExposedDropdownMenu" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu">
        <!-- color of box ONLY, not dropdown -->
        <item name="boxBackgroundColor">@color/colorBackground</item>
        <!-- the box outline color depending on state
             (default, enabled, hovered, focused, but NOT error) -->
        <item name="boxStrokeColor">@color/colorMidGrey</item>
        <!-- the box outline color just for errors -->
        <!-- <item name="boxStrokeErrorColor">@color/colorError</item> -->
        <!-- enable 8dp space below the box for error message -->
        <item name="errorEnabled">true</item>
        <!-- the hint INSIDE the box, before focusing the TextInputEditText -->
        <item name="android:textColorHint">@color/colorTextSecondary</item>
        <!-- the hint ON TOP of the box, when the TextInputEditText is focused -->
        <item name="hintTextColor">@color/colorPrimary</item>
        <!-- Gain access to additional styling for the child AutoCompleteTextView,
             which includes this spinner's dropdown/popup menu -->
        <item name="materialThemeOverlay">@style/AppTheme.ExposedDropdownMenu.MaterialThemeOverlay
        </item>
    </style>

    <!-- customization of the material theme for use as
         an overlay for the ExposedDropdownMenu style  -->
    <style name="AppTheme.ExposedDropdownMenu.MaterialThemeOverlay" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- background color of dropdown (popup) items -->
        <item name="colorSurface">#bdc3c7</item>
        <!--
         When this overlay is applied, the AutoCompleteTextView
         loses padding. Luckily, we can restore it by defining
         a style that should be applied to all AutoCompletTextView(s)
         in this theme/overlay
         -->
        <item name="autoCompleteTextViewStyle">
            @style/AppTheme.ExposedDropdownMenu.AutoCompleteStyle
        </item>
    </style>

    <!-- style the AutoCompleteTextView of our material spinner -->
    <style name="AppTheme.ExposedDropdownMenu.AutoCompleteStyle">
        <!-- restore padding to sanity -->
        <item name="android:padding">16dp</item>
        <item name="android:textColor">@color/colorOnSurface</item>
        <item name="android:textSize">14sp</item>
    </style>

    <!-- style for material spinner 'item' layout -->
    <style name="MaterialSpinnerItem" parent="Widget.AppCompat.TextView">
        <item name="android:color">@color/colorOnSurface</item>
        <item name="android:textColor">@color/colorOnSurface</item>
        <item name="android:textSize">14sp</item>
        <item name="android:ellipsize">end</item>
        <item name="android:maxLines">1</item>
        <item name="android:padding">16dp</item>
    </style>

    <color name="colorOnSurface">#000000</color>


</resources>